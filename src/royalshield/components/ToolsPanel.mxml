<?xml version="1.0" encoding="utf-8"?>

<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:mx="library://ns.adobe.com/flex/mx"
                   xmlns:ide="royalshield.components.*"
                   backgroundColor="0x494949"
                   borderColor="0x000000">
    
    <fx:Metadata>
        [Event(name="brushChange", type="royalshield.events.BrushEvent")]
    </fx:Metadata>
    
    <fx:Script>
        <![CDATA[
            import royalshield.brushes.BrushType;
            import royalshield.components.BrushButton;
            import royalshield.events.BrushEvent;
            import royalshield.utils.isNullOrEmpty;
            
            //--------------------------------------------------------------------------
            // PROPERTIES
            //--------------------------------------------------------------------------
            
            private var m_selectedTool:String;
            
            //--------------------------------------
            // Getters / Setters 
            //--------------------------------------
            
            public function get selectedTool():String { return m_selectedTool; }
            public function set selectedTool(value:String):void
            {
                if (m_selectedTool != value) {
                    if (selectButton(value)) {
                        m_selectedTool = value;
                        dispatchEvent(new BrushEvent(BrushEvent.BRUSH_CHANGE, m_selectedTool));
                    }
                }
            }
            
            //--------------------------------------------------------------------------
            // METHODS
            //--------------------------------------------------------------------------
            
            //--------------------------------------
            // Private
            //--------------------------------------
            
            private function selectButton(type:String):Boolean
            {
                if (isNullOrEmpty(type))
                    return false;
                
                var hasTool:Boolean;
                for (var i:int = 0; i < numElements; i++) {
                    var button:BrushButton = BrushButton(getElementAt(i));
                    if (!button) continue;
                    
                    button.selected = false;
                    if (button.brushType == type) {
                        button.selected = true;
                        hasTool = true;
                    }
                }
                return hasTool;
            }
            
            //--------------------------------------
            // Event Handlers
            //--------------------------------------
            
            protected function buttonClickHandler(event:Event):void
            {
                var type:String = BrushButton(event.target).brushType;
                if (m_selectedTool == type)
                    BrushButton(event.target).selected = true;
                else 
                    selectedTool = type;
            }
        ]]>
    </fx:Script>
    
    <s:layout>
        <s:VerticalLayout paddingLeft="3"
                          paddingRight="3"
                          paddingTop="5"
                          paddingBottom="5"
                          gap="5"/>
    </s:layout>
    
    <ide:BrushButton id="brushButton"
                     width="100%"
                     height="30"
                     label="B"
                     toolTip="Brush (B)"
                     brushType="{BrushType.BRUSH}"
                     click="buttonClickHandler(event)"/>
    
    <ide:BrushButton id="eraseButton"
                     width="100%"
                     height="30"
                     label="E"
                     toolTip="Erase (E)"
                     brushType="{BrushType.ERASER}"
                     click="buttonClickHandler(event)"/>
</s:BorderContainer>
